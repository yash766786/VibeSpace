name: deploy frontend to ec2

on: 
   push: 
       branches: 
          - main
        


env:
  DOCKER_IMAGE_NAME: vibespace-client
  EC2_USERNAME: ubuntu        

jobs: 
    deploy: 
        runs-on: ubuntu-latest 
        steps:
            - name: checkout code
              uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Login in to dockerhub
              uses: docker/login-action@v2 
              with:
                 username: ${{ secrets.DOCKER_HUB_USERNAME }} 
                 password: ${{ secrets.DOCKER_HUB_TOKEN }}

            - name: Build and push Docker image 
              uses: docker/build-push-action@v2 
              with: 
                context: ./Client  
                file: ./Client/dockerfile
                push: true 
                tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest    
                build-args: |
                  VITE_SERVER1_API: ${{ secrets.VITE_SERVER1_API }}
                  VITE_SERVER2_SOCKET: ${{ secrets.VITE_SERVER2_SOCKET }}
                  VITE_SERVER2_API: ${{ secrets.VITE_SERVER2_API }} 


            - name : Deploy to ec2 
              uses : appleboy/ssh-action@master
              with : 
                host: ${{ secrets.EC2_Host }}
                username: ${{ env.EC2_USERNAME}} 
                key: ${{ secrets.EC2_Key }}
                script: |
                    # Stop and remove the existing container
                    echo "Stopping existing container..."
                    sudo docker stop ${{ env.DOCKER_IMAGE_NAME}} || true
                    sudo docker rm ${{ env.DOCKER_IMAGE_NAME }} || true 

                    # remove old image
                    echo "Removing old image..."
                    sudo docker rmi ${{ secrets.DOCKER_HUB_USERNAME}}/${{ env.DOCKER_IMAGE_NAME }}:latest || true
                    
                    # pull new image
                    echo "Pulling new image..."
                    sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME}}/${{ env.DOCKER_IMAGE_NAME }}:latest 

                    # run new container
                    echo "Starting new container..."
                    sudo docker run -d \
                    --name ${{ env.DOCKER_IMAGE_NAME }} \
                    -p 5173:3000 \
                    --restart unless-stopped \
                    ${{ secrets.DOCKER_HUB_USERNAME}}/${{ env.DOCKER_IMAGE_NAME }}:latest

                    # Verify deployment
                    echo "Verifying deployment..."
                    sudo docker ps

                    echo "Deployment Successful"
                      
 
